;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 18/07/2024 14:18:26
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2C77      	GOTO       1143
_shift_reg:
;MMI_WR.c,175 :: 		void shift_reg(unsigned char byte_val)
;MMI_WR.c,179 :: 		for(i = 7; i >= 0; i--)
0x0003	0x3007      	MOVLW      7
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x00F3      	MOVWF      R3
0x0007	0x3000      	MOVLW      0
0x0008	0x00F4      	MOVWF      R3+1
L_shift_reg25:
0x0009	0x3080      	MOVLW      128
0x000A	0x0674      	XORWF      R3+1, 0
0x000B	0x00F0      	MOVWF      R0
0x000C	0x3080      	MOVLW      128
0x000D	0x0270      	SUBWF      R0, 0
0x000E	0x1D03      	BTFSS      STATUS, 2
0x000F	0x2812      	GOTO       L__shift_reg84
0x0010	0x3000      	MOVLW      0
0x0011	0x0273      	SUBWF      R3, 0
L__shift_reg84:
0x0012	0x1C03      	BTFSS      STATUS, 0
0x0013	0x283F      	GOTO       L_shift_reg26
;MMI_WR.c,181 :: 		(byte_val >> i) & 0x01 ?
0x0014	0x0873      	MOVF       R3, 0
0x0015	0x00F0      	MOVWF      R0
0x0016	0x0858      	MOVF       FARG_shift_reg_byte_val, 0
0x0017	0x00F1      	MOVWF      R1
0x0018	0x0870      	MOVF       R0, 0
L__shift_reg85:
0x0019	0x1903      	BTFSC      STATUS, 2
0x001A	0x281F      	GOTO       L__shift_reg86
0x001B	0x0CF1      	RRF        R1, 1
0x001C	0x13F1      	BCF        R1, 7
0x001D	0x3EFF      	ADDLW      255
0x001E	0x2819      	GOTO       L__shift_reg85
L__shift_reg86:
0x001F	0x1C71      	BTFSS      R1, 0
0x0020	0x2825      	GOTO       L_shift_reg28
;MMI_WR.c,182 :: 		(PORTMCU |=  DAT):
0x0021	0x1486      	BSF        PORTB, 1
0x0022	0x0806      	MOVF       PORTB, 0
0x0023	0x00F2      	MOVWF      R2
0x0024	0x2828      	GOTO       L_shift_reg29
L_shift_reg28:
;MMI_WR.c,183 :: 		(PORTMCU &= ~DAT);
0x0025	0x1086      	BCF        PORTB, 1
0x0026	0x0806      	MOVF       PORTB, 0
0x0027	0x00F2      	MOVWF      R2
L_shift_reg29:
;MMI_WR.c,185 :: 		__us(100);
0x0028	0x3021      	MOVLW      33
0x0029	0x00FD      	MOVWF      R13
L_shift_reg30:
0x002A	0x0BFD      	DECFSZ     R13, 1
0x002B	0x282A      	GOTO       L_shift_reg30
;MMI_WR.c,186 :: 		PORTMCU |=  CLK;
0x002C	0x1406      	BSF        PORTB, 0
;MMI_WR.c,187 :: 		__ms(1);
0x002D	0x3002      	MOVLW      2
0x002E	0x00FC      	MOVWF      R12
0x002F	0x304B      	MOVLW      75
0x0030	0x00FD      	MOVWF      R13
L_shift_reg31:
0x0031	0x0BFD      	DECFSZ     R13, 1
0x0032	0x2831      	GOTO       L_shift_reg31
0x0033	0x0BFC      	DECFSZ     R12, 1
0x0034	0x2831      	GOTO       L_shift_reg31
;MMI_WR.c,188 :: 		PORTMCU &= ~CLK;
0x0035	0x1006      	BCF        PORTB, 0
;MMI_WR.c,189 :: 		__us(100);
0x0036	0x3021      	MOVLW      33
0x0037	0x00FD      	MOVWF      R13
L_shift_reg32:
0x0038	0x0BFD      	DECFSZ     R13, 1
0x0039	0x2838      	GOTO       L_shift_reg32
;MMI_WR.c,179 :: 		for(i = 7; i >= 0; i--)
0x003A	0x3001      	MOVLW      1
0x003B	0x02F3      	SUBWF      R3, 1
0x003C	0x1C03      	BTFSS      STATUS, 0
0x003D	0x03F4      	DECF       R3+1, 1
;MMI_WR.c,190 :: 		} // end for
0x003E	0x2809      	GOTO       L_shift_reg25
L_shift_reg26:
;MMI_WR.c,192 :: 		PORTMCU &= ~DAT;
0x003F	0x1086      	BCF        PORTB, 1
;MMI_WR.c,193 :: 		PORTMCU |=  LAT;
0x0040	0x1506      	BSF        PORTB, 2
;MMI_WR.c,194 :: 		__ms(1);
0x0041	0x3002      	MOVLW      2
0x0042	0x00FC      	MOVWF      R12
0x0043	0x304B      	MOVLW      75
0x0044	0x00FD      	MOVWF      R13
L_shift_reg33:
0x0045	0x0BFD      	DECFSZ     R13, 1
0x0046	0x2845      	GOTO       L_shift_reg33
0x0047	0x0BFC      	DECFSZ     R12, 1
0x0048	0x2845      	GOTO       L_shift_reg33
;MMI_WR.c,195 :: 		PORTMCU &= ~LAT;
0x0049	0x1106      	BCF        PORTB, 2
;MMI_WR.c,196 :: 		}// end shift_reg
L_end_shift_reg:
0x004A	0x0008      	RETURN
; end of _shift_reg
_send_nibble:
;MMI_WR.c,205 :: 		void send_nibble(unsigned char nib, char rsel, char bli, char led)
;MMI_WR.c,209 :: 		sbyte = (nib & (1 << 7))|
0x004B	0x3080      	MOVLW      128
0x004C	0x1283      	BCF        STATUS, 5
0x004D	0x1303      	BCF        STATUS, 6
0x004E	0x0554      	ANDWF      FARG_send_nibble_nib, 0
0x004F	0x00AF      	MOVWF      send_nibble_sbyte_L0
;MMI_WR.c,210 :: 		(nib & (1 << 6))|
0x0050	0x3040      	MOVLW      64
0x0051	0x0554      	ANDWF      FARG_send_nibble_nib, 0
0x0052	0x00F0      	MOVWF      R0
0x0053	0x0870      	MOVF       R0, 0
0x0054	0x04AF      	IORWF      send_nibble_sbyte_L0, 1
;MMI_WR.c,211 :: 		(nib & (1 << 5))|
0x0055	0x3020      	MOVLW      32
0x0056	0x0554      	ANDWF      FARG_send_nibble_nib, 0
0x0057	0x00F0      	MOVWF      R0
0x0058	0x0870      	MOVF       R0, 0
0x0059	0x04AF      	IORWF      send_nibble_sbyte_L0, 1
;MMI_WR.c,212 :: 		(nib & (1 << 4));
0x005A	0x3010      	MOVLW      16
0x005B	0x0554      	ANDWF      FARG_send_nibble_nib, 0
0x005C	0x00F0      	MOVWF      R0
0x005D	0x0870      	MOVF       R0, 0
0x005E	0x04AF      	IORWF      send_nibble_sbyte_L0, 1
;MMI_WR.c,214 :: 		rsel ? (sbyte |= RS) : (sbyte &= ~RS);
0x005F	0x0855      	MOVF       FARG_send_nibble_rsel, 0
0x0060	0x1903      	BTFSC      STATUS, 2
0x0061	0x2864      	GOTO       L_send_nibble34
0x0062	0x152F      	BSF        send_nibble_sbyte_L0, 2
0x0063	0x2865      	GOTO       L_send_nibble35
L_send_nibble34:
0x0064	0x112F      	BCF        send_nibble_sbyte_L0, 2
L_send_nibble35:
;MMI_WR.c,215 :: 		bli  ? (sbyte |= BL) : (sbyte &= ~BL);
0x0065	0x0856      	MOVF       FARG_send_nibble_bli, 0
0x0066	0x1903      	BTFSC      STATUS, 2
0x0067	0x286A      	GOTO       L_send_nibble36
0x0068	0x14AF      	BSF        send_nibble_sbyte_L0, 1
0x0069	0x286B      	GOTO       L_send_nibble37
L_send_nibble36:
0x006A	0x10AF      	BCF        send_nibble_sbyte_L0, 1
L_send_nibble37:
;MMI_WR.c,216 :: 		led  ? (sbyte |= LD) : (sbyte &= ~LD);
0x006B	0x0857      	MOVF       FARG_send_nibble_led, 0
0x006C	0x1903      	BTFSC      STATUS, 2
0x006D	0x2870      	GOTO       L_send_nibble38
0x006E	0x142F      	BSF        send_nibble_sbyte_L0, 0
0x006F	0x2871      	GOTO       L_send_nibble39
L_send_nibble38:
0x0070	0x102F      	BCF        send_nibble_sbyte_L0, 0
L_send_nibble39:
;MMI_WR.c,218 :: 		shift_reg(sbyte | EN);
0x0071	0x3008      	MOVLW      8
0x0072	0x042F      	IORWF      send_nibble_sbyte_L0, 0
0x0073	0x00D8      	MOVWF      FARG_shift_reg_byte_val
0x0074	0x2003      	CALL       _shift_reg
;MMI_WR.c,219 :: 		__us(100);
0x0075	0x3021      	MOVLW      33
0x0076	0x00FD      	MOVWF      R13
L_send_nibble40:
0x0077	0x0BFD      	DECFSZ     R13, 1
0x0078	0x2877      	GOTO       L_send_nibble40
;MMI_WR.c,220 :: 		shift_reg(sbyte &~ EN);
0x0079	0x30F7      	MOVLW      247
0x007A	0x052F      	ANDWF      send_nibble_sbyte_L0, 0
0x007B	0x00D8      	MOVWF      FARG_shift_reg_byte_val
0x007C	0x2003      	CALL       _shift_reg
;MMI_WR.c,221 :: 		__us(100);
0x007D	0x3021      	MOVLW      33
0x007E	0x00FD      	MOVWF      R13
L_send_nibble41:
0x007F	0x0BFD      	DECFSZ     R13, 1
0x0080	0x287F      	GOTO       L_send_nibble41
;MMI_WR.c,222 :: 		} // end send_nibble
L_end_send_nibble:
0x0081	0x0008      	RETURN
; end of _send_nibble
_slcd_cmd:
;MMI_WR.c,87 :: 		void slcd_cmd(unsigned char cmd)
;MMI_WR.c,89 :: 		send_nibble(cmd, 0, sbli, sled);
0x0082	0x1283      	BCF        STATUS, 5
0x0083	0x1303      	BCF        STATUS, 6
0x0084	0x0853      	MOVF       FARG_slcd_cmd_cmd, 0
0x0085	0x00D4      	MOVWF      FARG_send_nibble_nib
0x0086	0x01D5      	CLRF       FARG_send_nibble_rsel
0x0087	0x083A      	MOVF       _sbli, 0
0x0088	0x00D6      	MOVWF      FARG_send_nibble_bli
0x0089	0x083B      	MOVF       _sled, 0
0x008A	0x00D7      	MOVWF      FARG_send_nibble_led
0x008B	0x204B      	CALL       _send_nibble
;MMI_WR.c,90 :: 		cmd <<= 4;
0x008C	0x0853      	MOVF       FARG_slcd_cmd_cmd, 0
0x008D	0x00F0      	MOVWF      R0
0x008E	0x0DF0      	RLF        R0, 1
0x008F	0x1070      	BCF        R0, 0
0x0090	0x0DF0      	RLF        R0, 1
0x0091	0x1070      	BCF        R0, 0
0x0092	0x0DF0      	RLF        R0, 1
0x0093	0x1070      	BCF        R0, 0
0x0094	0x0DF0      	RLF        R0, 1
0x0095	0x1070      	BCF        R0, 0
0x0096	0x0870      	MOVF       R0, 0
0x0097	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
;MMI_WR.c,91 :: 		send_nibble(cmd, 0, sbli, sled);
0x0098	0x0870      	MOVF       R0, 0
0x0099	0x00D4      	MOVWF      FARG_send_nibble_nib
0x009A	0x01D5      	CLRF       FARG_send_nibble_rsel
0x009B	0x083A      	MOVF       _sbli, 0
0x009C	0x00D6      	MOVWF      FARG_send_nibble_bli
0x009D	0x083B      	MOVF       _sled, 0
0x009E	0x00D7      	MOVWF      FARG_send_nibble_led
0x009F	0x204B      	CALL       _send_nibble
;MMI_WR.c,92 :: 		}// end slcd_cmd
L_end_slcd_cmd:
0x00A0	0x0008      	RETURN
; end of _slcd_cmd
_slcd_write:
;MMI_WR.c,36 :: 		void slcd_write(unsigned char chr)
;MMI_WR.c,38 :: 		send_nibble(chr, 1, sbli, sled);
0x00A1	0x1283      	BCF        STATUS, 5
0x00A2	0x1303      	BCF        STATUS, 6
0x00A3	0x0853      	MOVF       FARG_slcd_write_chr, 0
0x00A4	0x00D4      	MOVWF      FARG_send_nibble_nib
0x00A5	0x3001      	MOVLW      1
0x00A6	0x00D5      	MOVWF      FARG_send_nibble_rsel
0x00A7	0x083A      	MOVF       _sbli, 0
0x00A8	0x00D6      	MOVWF      FARG_send_nibble_bli
0x00A9	0x083B      	MOVF       _sled, 0
0x00AA	0x00D7      	MOVWF      FARG_send_nibble_led
0x00AB	0x204B      	CALL       _send_nibble
;MMI_WR.c,39 :: 		chr <<= 4;
0x00AC	0x0853      	MOVF       FARG_slcd_write_chr, 0
0x00AD	0x00F0      	MOVWF      R0
0x00AE	0x0DF0      	RLF        R0, 1
0x00AF	0x1070      	BCF        R0, 0
0x00B0	0x0DF0      	RLF        R0, 1
0x00B1	0x1070      	BCF        R0, 0
0x00B2	0x0DF0      	RLF        R0, 1
0x00B3	0x1070      	BCF        R0, 0
0x00B4	0x0DF0      	RLF        R0, 1
0x00B5	0x1070      	BCF        R0, 0
0x00B6	0x0870      	MOVF       R0, 0
0x00B7	0x00D3      	MOVWF      FARG_slcd_write_chr
;MMI_WR.c,40 :: 		send_nibble(chr, 1, sbli, sled);
0x00B8	0x0870      	MOVF       R0, 0
0x00B9	0x00D4      	MOVWF      FARG_send_nibble_nib
0x00BA	0x3001      	MOVLW      1
0x00BB	0x00D5      	MOVWF      FARG_send_nibble_rsel
0x00BC	0x083A      	MOVF       _sbli, 0
0x00BD	0x00D6      	MOVWF      FARG_send_nibble_bli
0x00BE	0x083B      	MOVF       _sled, 0
0x00BF	0x00D7      	MOVWF      FARG_send_nibble_led
0x00C0	0x204B      	CALL       _send_nibble
;MMI_WR.c,41 :: 		}// slcd_write
L_end_slcd_write:
0x00C1	0x0008      	RETURN
; end of _slcd_write
_sbacklight_on:
;MMI_WR.c,260 :: 		void sbacklight_on(void)
;MMI_WR.c,262 :: 		sbli = 1;
0x00C2	0x3001      	MOVLW      1
0x00C3	0x1283      	BCF        STATUS, 5
0x00C4	0x1303      	BCF        STATUS, 6
0x00C5	0x00BA      	MOVWF      _sbli
;MMI_WR.c,263 :: 		slcd_cmd(0x06);
0x00C6	0x3006      	MOVLW      6
0x00C7	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x00C8	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,264 :: 		}// end sbacklight_on
L_end_sbacklight_on:
0x00C9	0x0008      	RETURN
; end of _sbacklight_on
_sbacklight_off:
;MMI_WR.c,269 :: 		void sbacklight_off(void)
;MMI_WR.c,271 :: 		sbli = 0;
0x00CA	0x1283      	BCF        STATUS, 5
0x00CB	0x1303      	BCF        STATUS, 6
0x00CC	0x01BA      	CLRF       _sbli
;MMI_WR.c,272 :: 		slcd_cmd(0x06);
0x00CD	0x3006      	MOVLW      6
0x00CE	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x00CF	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,273 :: 		} // end sbacklight_off
L_end_sbacklight_off:
0x00D0	0x0008      	RETURN
; end of _sbacklight_off
_slcd_clear:
;MMI_WR.c,164 :: 		void slcd_clear(void)
;MMI_WR.c,166 :: 		slcd_cmd(0x02);                          // Returns to home
0x00D1	0x3002      	MOVLW      2
0x00D2	0x1283      	BCF        STATUS, 5
0x00D3	0x1303      	BCF        STATUS, 6
0x00D4	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x00D5	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,167 :: 		slcd_cmd(0x01);                          // Clears LCD
0x00D6	0x3001      	MOVLW      1
0x00D7	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x00D8	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,168 :: 		}// end slcd_clear
L_end_slcd_clear:
0x00D9	0x0008      	RETURN
; end of _slcd_clear
_slcd_opt:
;MMI_WR.c,227 :: 		void slcd_opt(char disp, char cursor, char blink)
;MMI_WR.c,231 :: 		disp   ? (opt |= (1 << 2)) : (opt &= ~(1 << 2));
0x00DA	0x1283      	BCF        STATUS, 5
0x00DB	0x1303      	BCF        STATUS, 6
0x00DC	0x0850      	MOVF       FARG_slcd_opt_disp, 0
0x00DD	0x1903      	BTFSC      STATUS, 2
0x00DE	0x28E1      	GOTO       L_slcd_opt42
0x00DF	0x152D      	BSF        slcd_opt_opt_L0, 2
0x00E0	0x28E2      	GOTO       L_slcd_opt43
L_slcd_opt42:
0x00E1	0x112D      	BCF        slcd_opt_opt_L0, 2
L_slcd_opt43:
;MMI_WR.c,232 :: 		cursor ? (opt |= (1 << 1)) : (opt &= ~(1 << 1));
0x00E2	0x0851      	MOVF       FARG_slcd_opt_cursor, 0
0x00E3	0x1903      	BTFSC      STATUS, 2
0x00E4	0x28E7      	GOTO       L_slcd_opt44
0x00E5	0x14AD      	BSF        slcd_opt_opt_L0, 1
0x00E6	0x28E8      	GOTO       L_slcd_opt45
L_slcd_opt44:
0x00E7	0x10AD      	BCF        slcd_opt_opt_L0, 1
L_slcd_opt45:
;MMI_WR.c,233 :: 		blink  ? (opt |= (1 << 0)) : (opt &= ~(1 << 0));
0x00E8	0x0852      	MOVF       FARG_slcd_opt_blink, 0
0x00E9	0x1903      	BTFSC      STATUS, 2
0x00EA	0x28ED      	GOTO       L_slcd_opt46
0x00EB	0x142D      	BSF        slcd_opt_opt_L0, 0
0x00EC	0x28EE      	GOTO       L_slcd_opt47
L_slcd_opt46:
0x00ED	0x102D      	BCF        slcd_opt_opt_L0, 0
L_slcd_opt47:
;MMI_WR.c,235 :: 		slcd_cmd(opt);
0x00EE	0x082D      	MOVF       slcd_opt_opt_L0, 0
0x00EF	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x00F0	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,237 :: 		}// end slcd_opt
L_end_slcd_opt:
0x00F1	0x0008      	RETURN
; end of _slcd_opt
_Div_32x32_U:
;__Lib_Math.c,1317 :: 		
;__Lib_Math.c,1326 :: 		
;__Lib_Math.c,1328 :: 		
0x00F2	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,1329 :: 		
0x00F3	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,1330 :: 		
0x00F4	0x01FB      	CLRF       R11
;__Lib_Math.c,1331 :: 		
0x00F5	0x01FA      	CLRF       R10
;__Lib_Math.c,1332 :: 		
0x00F6	0x01F9      	CLRF       R9
;__Lib_Math.c,1333 :: 		
0x00F7	0x01F8      	CLRF       R8
;__Lib_Math.c,1335 :: 		
0x00F8	0x01A0      	CLRF       ___math_tempb
;__Lib_Math.c,1337 :: 		
0x00F9	0x0D73      	RLF        R3, 0
;__Lib_Math.c,1338 :: 		
0x00FA	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1339 :: 		
0x00FB	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1340 :: 		
0x00FC	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1341 :: 		
0x00FD	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1342 :: 		
0x00FE	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1343 :: 		
0x00FF	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1344 :: 		
0x0100	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1345 :: 		
0x0101	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1346 :: 		
0x0102	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1347 :: 		
0x0103	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1348 :: 		
0x0104	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1349 :: 		
0x0105	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1350 :: 		
0x0106	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1351 :: 		
0x0107	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1352 :: 		
0x0108	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1354 :: 		
0x0109	0x0100      	CLRW
;__Lib_Math.c,1355 :: 		
0x010A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1356 :: 		
0x010B	0x3001      	MOVLW      1
;__Lib_Math.c,1357 :: 		
0x010C	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1358 :: 		
0x010D	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,1360 :: 		
0x010E	0x3007      	MOVLW      7
;__Lib_Math.c,1361 :: 		
0x010F	0x00FC      	MOVWF      R12
;__Lib_Math.c,1363 :: 		
LOOPU3232A:
;__Lib_Math.c,1364 :: 		
0x0110	0x0D73      	RLF        R3, 0
;__Lib_Math.c,1365 :: 		
0x0111	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1366 :: 		
0x0112	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1367 :: 		
0x0113	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1368 :: 		
0x0114	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1369 :: 		
0x0115	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1370 :: 		
0x0116	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1371 :: 		
0x0117	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,1372 :: 		
0x0118	0x292B      	GOTO       UADD22LA
;__Lib_Math.c,1374 :: 		
0x0119	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1375 :: 		
0x011A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1376 :: 		
0x011B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1377 :: 		
0x011C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1378 :: 		
0x011D	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1379 :: 		
0x011E	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1380 :: 		
0x011F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1381 :: 		
0x0120	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1382 :: 		
0x0121	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1383 :: 		
0x0122	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1384 :: 		
0x0123	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1385 :: 		
0x0124	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1386 :: 		
0x0125	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1387 :: 		
0x0126	0x0100      	CLRW
;__Lib_Math.c,1388 :: 		
0x0127	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1389 :: 		
0x0128	0x3001      	MOVLW      1
;__Lib_Math.c,1390 :: 		
0x0129	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1391 :: 		
0x012A	0x293C      	GOTO       UOK22LA
;__Lib_Math.c,1393 :: 		
UADD22LA:
;__Lib_Math.c,1394 :: 		
0x012B	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1395 :: 		
0x012C	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1396 :: 		
0x012D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1397 :: 		
0x012E	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1398 :: 		
0x012F	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1399 :: 		
0x0130	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1400 :: 		
0x0131	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1401 :: 		
0x0132	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1402 :: 		
0x0133	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1403 :: 		
0x0134	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1404 :: 		
0x0135	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1405 :: 		
0x0136	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1406 :: 		
0x0137	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1407 :: 		
0x0138	0x0100      	CLRW
;__Lib_Math.c,1408 :: 		
0x0139	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1409 :: 		
0x013A	0x3001      	MOVLW      1
;__Lib_Math.c,1410 :: 		
0x013B	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1412 :: 		
UOK22LA:
;__Lib_Math.c,1413 :: 		
0x013C	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,1415 :: 		
0x013D	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1416 :: 		
0x013E	0x2910      	GOTO       LOOPU3232A
;__Lib_Math.c,1418 :: 		
0x013F	0x0D72      	RLF        R2, 0
;__Lib_Math.c,1419 :: 		
0x0140	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1420 :: 		
0x0141	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1421 :: 		
0x0142	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1422 :: 		
0x0143	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1423 :: 		
0x0144	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1424 :: 		
0x0145	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1425 :: 		
0x0146	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,1426 :: 		
0x0147	0x295A      	GOTO       UADD22L8
;__Lib_Math.c,1428 :: 		
0x0148	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1429 :: 		
0x0149	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1430 :: 		
0x014A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1431 :: 		
0x014B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1432 :: 		
0x014C	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1433 :: 		
0x014D	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1434 :: 		
0x014E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1435 :: 		
0x014F	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1436 :: 		
0x0150	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1437 :: 		
0x0151	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1438 :: 		
0x0152	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1439 :: 		
0x0153	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1440 :: 		
0x0154	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1441 :: 		
0x0155	0x0100      	CLRW
;__Lib_Math.c,1442 :: 		
0x0156	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1443 :: 		
0x0157	0x3001      	MOVLW      1
;__Lib_Math.c,1444 :: 		
0x0158	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1445 :: 		
0x0159	0x296B      	GOTO       UOK22L8
;__Lib_Math.c,1447 :: 		
UADD22L8:
;__Lib_Math.c,1448 :: 		
0x015A	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1449 :: 		
0x015B	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1450 :: 		
0x015C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1451 :: 		
0x015D	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1452 :: 		
0x015E	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1453 :: 		
0x015F	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1454 :: 		
0x0160	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1455 :: 		
0x0161	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1456 :: 		
0x0162	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1457 :: 		
0x0163	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1458 :: 		
0x0164	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1459 :: 		
0x0165	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1460 :: 		
0x0166	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1461 :: 		
0x0167	0x0100      	CLRW
;__Lib_Math.c,1462 :: 		
0x0168	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1463 :: 		
0x0169	0x3001      	MOVLW      1
;__Lib_Math.c,1464 :: 		
0x016A	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1466 :: 		
UOK22L8:
;__Lib_Math.c,1467 :: 		
0x016B	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,1469 :: 		
0x016C	0x3007      	MOVLW      7
;__Lib_Math.c,1470 :: 		
0x016D	0x00FC      	MOVWF      R12
;__Lib_Math.c,1472 :: 		
LOOPU3232B:
;__Lib_Math.c,1473 :: 		
0x016E	0x0D72      	RLF        R2, 0
;__Lib_Math.c,1474 :: 		
0x016F	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1475 :: 		
0x0170	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1476 :: 		
0x0171	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1477 :: 		
0x0172	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1478 :: 		
0x0173	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1479 :: 		
0x0174	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1480 :: 		
0x0175	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,1481 :: 		
0x0176	0x2989      	GOTO       UADD22LB
;__Lib_Math.c,1483 :: 		
0x0177	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1484 :: 		
0x0178	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1485 :: 		
0x0179	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1486 :: 		
0x017A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1487 :: 		
0x017B	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1488 :: 		
0x017C	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1489 :: 		
0x017D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1490 :: 		
0x017E	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1491 :: 		
0x017F	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1492 :: 		
0x0180	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1493 :: 		
0x0181	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1494 :: 		
0x0182	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1495 :: 		
0x0183	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1496 :: 		
0x0184	0x0100      	CLRW
;__Lib_Math.c,1497 :: 		
0x0185	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1498 :: 		
0x0186	0x3001      	MOVLW      1
;__Lib_Math.c,1499 :: 		
0x0187	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1500 :: 		
0x0188	0x299A      	GOTO       UOK22LB
;__Lib_Math.c,1502 :: 		
UADD22LB:
;__Lib_Math.c,1503 :: 		
0x0189	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1504 :: 		
0x018A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1505 :: 		
0x018B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1506 :: 		
0x018C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1507 :: 		
0x018D	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1508 :: 		
0x018E	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1509 :: 		
0x018F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1510 :: 		
0x0190	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1511 :: 		
0x0191	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1512 :: 		
0x0192	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1513 :: 		
0x0193	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1514 :: 		
0x0194	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1515 :: 		
0x0195	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1516 :: 		
0x0196	0x0100      	CLRW
;__Lib_Math.c,1517 :: 		
0x0197	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1518 :: 		
0x0198	0x3001      	MOVLW      1
;__Lib_Math.c,1519 :: 		
0x0199	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1521 :: 		
UOK22LB:
;__Lib_Math.c,1522 :: 		
0x019A	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,1524 :: 		
0x019B	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1525 :: 		
0x019C	0x296E      	GOTO       LOOPU3232B
;__Lib_Math.c,1527 :: 		
0x019D	0x0D71      	RLF        R1, 0
;__Lib_Math.c,1528 :: 		
0x019E	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1529 :: 		
0x019F	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1530 :: 		
0x01A0	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1531 :: 		
0x01A1	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1532 :: 		
0x01A2	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1533 :: 		
0x01A3	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1534 :: 		
0x01A4	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,1535 :: 		
0x01A5	0x29B8      	GOTO       UADD22L16
;__Lib_Math.c,1537 :: 		
0x01A6	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1538 :: 		
0x01A7	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1539 :: 		
0x01A8	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1540 :: 		
0x01A9	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1541 :: 		
0x01AA	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1542 :: 		
0x01AB	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1543 :: 		
0x01AC	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1544 :: 		
0x01AD	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1545 :: 		
0x01AE	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1546 :: 		
0x01AF	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1547 :: 		
0x01B0	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1548 :: 		
0x01B1	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1549 :: 		
0x01B2	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1550 :: 		
0x01B3	0x0100      	CLRW
;__Lib_Math.c,1551 :: 		
0x01B4	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1552 :: 		
0x01B5	0x3001      	MOVLW      1
;__Lib_Math.c,1553 :: 		
0x01B6	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1554 :: 		
0x01B7	0x29C9      	GOTO       UOK22L16
;__Lib_Math.c,1556 :: 		
UADD22L16:
;__Lib_Math.c,1557 :: 		
0x01B8	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1558 :: 		
0x01B9	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1559 :: 		
0x01BA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1560 :: 		
0x01BB	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1561 :: 		
0x01BC	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1562 :: 		
0x01BD	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1563 :: 		
0x01BE	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1564 :: 		
0x01BF	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1565 :: 		
0x01C0	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1566 :: 		
0x01C1	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1567 :: 		
0x01C2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1568 :: 		
0x01C3	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1569 :: 		
0x01C4	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1570 :: 		
0x01C5	0x0100      	CLRW
;__Lib_Math.c,1571 :: 		
0x01C6	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1572 :: 		
0x01C7	0x3001      	MOVLW      1
;__Lib_Math.c,1573 :: 		
0x01C8	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1575 :: 		
UOK22L16:
;__Lib_Math.c,1576 :: 		
0x01C9	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,1578 :: 		
0x01CA	0x3007      	MOVLW      7
;__Lib_Math.c,1579 :: 		
0x01CB	0x00FC      	MOVWF      R12
;__Lib_Math.c,1581 :: 		
LOOPU3232C:
;__Lib_Math.c,1582 :: 		
0x01CC	0x0D71      	RLF        R1, 0
;__Lib_Math.c,1583 :: 		
0x01CD	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1584 :: 		
0x01CE	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1585 :: 		
0x01CF	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1586 :: 		
0x01D0	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1587 :: 		
0x01D1	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1588 :: 		
0x01D2	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1589 :: 		
0x01D3	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,1590 :: 		
0x01D4	0x29E7      	GOTO       UADD22LC
;__Lib_Math.c,1592 :: 		
0x01D5	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1593 :: 		
0x01D6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1594 :: 		
0x01D7	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1595 :: 		
0x01D8	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1596 :: 		
0x01D9	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1597 :: 		
0x01DA	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1598 :: 		
0x01DB	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1599 :: 		
0x01DC	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1600 :: 		
0x01DD	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1601 :: 		
0x01DE	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1602 :: 		
0x01DF	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1603 :: 		
0x01E0	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1604 :: 		
0x01E1	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1605 :: 		
0x01E2	0x0100      	CLRW
;__Lib_Math.c,1606 :: 		
0x01E3	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1607 :: 		
0x01E4	0x3001      	MOVLW      1
;__Lib_Math.c,1608 :: 		
0x01E5	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1609 :: 		
0x01E6	0x29F8      	GOTO       UOK22LC
;__Lib_Math.c,1611 :: 		
UADD22LC:
;__Lib_Math.c,1612 :: 		
0x01E7	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1613 :: 		
0x01E8	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1614 :: 		
0x01E9	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1615 :: 		
0x01EA	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1616 :: 		
0x01EB	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1617 :: 		
0x01EC	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1618 :: 		
0x01ED	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1619 :: 		
0x01EE	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1620 :: 		
0x01EF	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1621 :: 		
0x01F0	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1622 :: 		
0x01F1	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1623 :: 		
0x01F2	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1624 :: 		
0x01F3	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1625 :: 		
0x01F4	0x0100      	CLRW
;__Lib_Math.c,1626 :: 		
0x01F5	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1627 :: 		
0x01F6	0x3001      	MOVLW      1
;__Lib_Math.c,1628 :: 		
0x01F7	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1630 :: 		
UOK22LC:
;__Lib_Math.c,1631 :: 		
0x01F8	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,1633 :: 		
0x01F9	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1634 :: 		
0x01FA	0x29CC      	GOTO       LOOPU3232C
;__Lib_Math.c,1636 :: 		
0x01FB	0x0D70      	RLF        R0, 0
;__Lib_Math.c,1637 :: 		
0x01FC	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1638 :: 		
0x01FD	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1639 :: 		
0x01FE	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1640 :: 		
0x01FF	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1641 :: 		
0x0200	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1642 :: 		
0x0201	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1643 :: 		
0x0202	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,1644 :: 		
0x0203	0x2A16      	GOTO       UADD22L24
;__Lib_Math.c,1646 :: 		
0x0204	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1647 :: 		
0x0205	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1648 :: 		
0x0206	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1649 :: 		
0x0207	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1650 :: 		
0x0208	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1651 :: 		
0x0209	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1652 :: 		
0x020A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1653 :: 		
0x020B	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1654 :: 		
0x020C	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1655 :: 		
0x020D	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1656 :: 		
0x020E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1657 :: 		
0x020F	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1658 :: 		
0x0210	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1659 :: 		
0x0211	0x0100      	CLRW
;__Lib_Math.c,1660 :: 		
0x0212	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1661 :: 		
0x0213	0x3001      	MOVLW      1
;__Lib_Math.c,1662 :: 		
0x0214	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1663 :: 		
0x0215	0x2A27      	GOTO       UOK22L24
;__Lib_Math.c,1665 :: 		
UADD22L24:
;__Lib_Math.c,1666 :: 		
0x0216	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1667 :: 		
0x0217	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1668 :: 		
0x0218	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1669 :: 		
0x0219	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1670 :: 		
0x021A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1671 :: 		
0x021B	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1672 :: 		
0x021C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1673 :: 		
0x021D	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1674 :: 		
0x021E	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1675 :: 		
0x021F	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1676 :: 		
0x0220	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1677 :: 		
0x0221	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1678 :: 		
0x0222	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1679 :: 		
0x0223	0x0100      	CLRW
;__Lib_Math.c,1680 :: 		
0x0224	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1681 :: 		
0x0225	0x3001      	MOVLW      1
;__Lib_Math.c,1682 :: 		
0x0226	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1684 :: 		
UOK22L24:
;__Lib_Math.c,1685 :: 		
0x0227	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,1687 :: 		
0x0228	0x3007      	MOVLW      7
;__Lib_Math.c,1688 :: 		
0x0229	0x00FC      	MOVWF      R12
;__Lib_Math.c,1690 :: 		
LOOPU3232D:
;__Lib_Math.c,1691 :: 		
0x022A	0x0D70      	RLF        R0, 0
;__Lib_Math.c,1692 :: 		
0x022B	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1693 :: 		
0x022C	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1694 :: 		
0x022D	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1695 :: 		
0x022E	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1696 :: 		
0x022F	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1697 :: 		
0x0230	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1698 :: 		
0x0231	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,1699 :: 		
0x0232	0x2A45      	GOTO       UADD22LD
;__Lib_Math.c,1701 :: 		
0x0233	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1702 :: 		
0x0234	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1703 :: 		
0x0235	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1704 :: 		
0x0236	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1705 :: 		
0x0237	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1706 :: 		
0x0238	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1707 :: 		
0x0239	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1708 :: 		
0x023A	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1709 :: 		
0x023B	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1710 :: 		
0x023C	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1711 :: 		
0x023D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1712 :: 		
0x023E	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1713 :: 		
0x023F	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1714 :: 		
0x0240	0x0100      	CLRW
;__Lib_Math.c,1715 :: 		
0x0241	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1716 :: 		
0x0242	0x3001      	MOVLW      1
;__Lib_Math.c,1717 :: 		
0x0243	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1718 :: 		
0x0244	0x2A56      	GOTO       UOK22LD
;__Lib_Math.c,1720 :: 		
UADD22LD:
;__Lib_Math.c,1721 :: 		
0x0245	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1722 :: 		
0x0246	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1723 :: 		
0x0247	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1724 :: 		
0x0248	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1725 :: 		
0x0249	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1726 :: 		
0x024A	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1727 :: 		
0x024B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1728 :: 		
0x024C	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1729 :: 		
0x024D	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1730 :: 		
0x024E	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1731 :: 		
0x024F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1732 :: 		
0x0250	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1733 :: 		
0x0251	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1734 :: 		
0x0252	0x0100      	CLRW
;__Lib_Math.c,1735 :: 		
0x0253	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1736 :: 		
0x0254	0x3001      	MOVLW      1
;__Lib_Math.c,1737 :: 		
0x0255	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1739 :: 		
UOK22LD:
;__Lib_Math.c,1740 :: 		
0x0256	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,1742 :: 		
0x0257	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1743 :: 		
0x0258	0x2A2A      	GOTO       LOOPU3232D
;__Lib_Math.c,1745 :: 		
0x0259	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,1746 :: 		
0x025A	0x2A69      	GOTO       UOK22L
;__Lib_Math.c,1747 :: 		
0x025B	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1748 :: 		
0x025C	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1749 :: 		
0x025D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1750 :: 		
0x025E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1751 :: 		
0x025F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1752 :: 		
0x0260	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1753 :: 		
0x0261	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1754 :: 		
0x0262	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1755 :: 		
0x0263	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1756 :: 		
0x0264	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1757 :: 		
0x0265	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1758 :: 		
0x0266	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1759 :: 		
0x0267	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1760 :: 		
0x0268	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1762 :: 		
UOK22L:
;__Lib_Math.c,1765 :: 		
L_end_Div_32x32_U:
0x0269	0x0008      	RETURN
; end of _Div_32x32_U
_slcd_wr_po:
;MMI_WR.c,68 :: 		void slcd_wr_po(unsigned char chr, char row, char col)
;MMI_WR.c,70 :: 		if(!row)                   // line 0
0x026A	0x1283      	BCF        STATUS, 5
0x026B	0x1303      	BCF        STATUS, 6
0x026C	0x0851      	MOVF       FARG_slcd_wr_po_row, 0
0x026D	0x1D03      	BTFSS      STATUS, 2
0x026E	0x2A77      	GOTO       L_slcd_wr_po4
;MMI_WR.c,72 :: 		slcd_cmd(0x80 | col);  // sends commant to positione in correct column
0x026F	0x3080      	MOVLW      128
0x0270	0x0452      	IORWF      FARG_slcd_wr_po_col, 0
0x0271	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x0272	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,73 :: 		slcd_write(chr);
0x0273	0x0850      	MOVF       FARG_slcd_wr_po_chr, 0
0x0274	0x00D3      	MOVWF      FARG_slcd_write_chr
0x0275	0x20A1      	CALL       _slcd_write
;MMI_WR.c,74 :: 		}   // end if
0x0276	0x2A7E      	GOTO       L_slcd_wr_po5
L_slcd_wr_po4:
;MMI_WR.c,77 :: 		slcd_cmd(0xC0 | col);   // sends commant to positione in correct column
0x0277	0x30C0      	MOVLW      192
0x0278	0x0452      	IORWF      FARG_slcd_wr_po_col, 0
0x0279	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x027A	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,78 :: 		slcd_write(chr);
0x027B	0x0850      	MOVF       FARG_slcd_wr_po_chr, 0
0x027C	0x00D3      	MOVWF      FARG_slcd_write_chr
0x027D	0x20A1      	CALL       _slcd_write
;MMI_WR.c,79 :: 		}   // end else
L_slcd_wr_po5:
;MMI_WR.c,80 :: 		}// end slcd_wr_po
L_end_slcd_wr_po:
0x027E	0x0008      	RETURN
; end of _slcd_wr_po
_keyboard:
;MMI_WR.c,278 :: 		char keyboard(volatile unsigned char *port)
;MMI_WR.c,282 :: 		if(!(*port & BT1))                      // Did button 1 press
0x027F	0x1283      	BCF        STATUS, 5
0x0280	0x1303      	BCF        STATUS, 6
0x0281	0x0850      	MOVF       FARG_keyboard_port, 0
0x0282	0x0084      	MOVWF      FSR
0x0283	0x0800      	MOVF       INDF, 0
0x0284	0x00F2      	MOVWF      R2
0x0285	0x1A72      	BTFSC      R2, 4
0x0286	0x2A88      	GOTO       L_keyboard48
;MMI_WR.c,283 :: 		flags |= (1 << 1);                  // Yes, set bit 1 flag
0x0287	0x14AE      	BSF        keyboard_flags_L0, 1
L_keyboard48:
;MMI_WR.c,285 :: 		if((*port & BT1) && (flags & (1 << 1))) // button 1 released and flag 1 set
0x0288	0x0850      	MOVF       FARG_keyboard_port, 0
0x0289	0x0084      	MOVWF      FSR
0x028A	0x0800      	MOVF       INDF, 0
0x028B	0x00F2      	MOVWF      R2
0x028C	0x1E72      	BTFSS      R2, 4
0x028D	0x2A9D      	GOTO       L_keyboard51
0x028E	0x1CAE      	BTFSS      keyboard_flags_L0, 1
0x028F	0x2A9D      	GOTO       L_keyboard51
L__keyboard75:
;MMI_WR.c,287 :: 		flags &= ~(1 << 1);                 // cleans flag 1
0x0290	0x10AE      	BCF        keyboard_flags_L0, 1
;MMI_WR.c,288 :: 		__ms(50);                           // anti-bouncing
0x0291	0x3041      	MOVLW      65
0x0292	0x00FC      	MOVWF      R12
0x0293	0x30EE      	MOVLW      238
0x0294	0x00FD      	MOVWF      R13
L_keyboard52:
0x0295	0x0BFD      	DECFSZ     R13, 1
0x0296	0x2A95      	GOTO       L_keyboard52
0x0297	0x0BFC      	DECFSZ     R12, 1
0x0298	0x2A95      	GOTO       L_keyboard52
0x0299	0x0000      	NOP
;MMI_WR.c,289 :: 		return 1;                           // return 1, indicating button 1 pressed
0x029A	0x3001      	MOVLW      1
0x029B	0x00F0      	MOVWF      R0
0x029C	0x2AF2      	GOTO       L_end_keyboard
;MMI_WR.c,290 :: 		}
L_keyboard51:
;MMI_WR.c,294 :: 		if(!(*port & BT2))                      // Did button 2 press
0x029D	0x0850      	MOVF       FARG_keyboard_port, 0
0x029E	0x0084      	MOVWF      FSR
0x029F	0x0800      	MOVF       INDF, 0
0x02A0	0x00F2      	MOVWF      R2
0x02A1	0x1AF2      	BTFSC      R2, 5
0x02A2	0x2AA4      	GOTO       L_keyboard53
;MMI_WR.c,295 :: 		flags |= (1 << 2);                  // Yes, set bit 2 flag
0x02A3	0x152E      	BSF        keyboard_flags_L0, 2
L_keyboard53:
;MMI_WR.c,297 :: 		if((*port & BT1) && (flags & (1 << 2))) // button 2 released and flag 2 set
0x02A4	0x0850      	MOVF       FARG_keyboard_port, 0
0x02A5	0x0084      	MOVWF      FSR
0x02A6	0x0800      	MOVF       INDF, 0
0x02A7	0x00F2      	MOVWF      R2
0x02A8	0x1E72      	BTFSS      R2, 4
0x02A9	0x2AB9      	GOTO       L_keyboard56
0x02AA	0x1D2E      	BTFSS      keyboard_flags_L0, 2
0x02AB	0x2AB9      	GOTO       L_keyboard56
L__keyboard74:
;MMI_WR.c,299 :: 		flags &= ~(1 << 2);                 // cleans flag 2
0x02AC	0x112E      	BCF        keyboard_flags_L0, 2
;MMI_WR.c,300 :: 		__ms(50);                           // anti-bouncing
0x02AD	0x3041      	MOVLW      65
0x02AE	0x00FC      	MOVWF      R12
0x02AF	0x30EE      	MOVLW      238
0x02B0	0x00FD      	MOVWF      R13
L_keyboard57:
0x02B1	0x0BFD      	DECFSZ     R13, 1
0x02B2	0x2AB1      	GOTO       L_keyboard57
0x02B3	0x0BFC      	DECFSZ     R12, 1
0x02B4	0x2AB1      	GOTO       L_keyboard57
0x02B5	0x0000      	NOP
;MMI_WR.c,301 :: 		return 2;                           // return 2, indicating button 2 pressed
0x02B6	0x3002      	MOVLW      2
0x02B7	0x00F0      	MOVWF      R0
0x02B8	0x2AF2      	GOTO       L_end_keyboard
;MMI_WR.c,302 :: 		}
L_keyboard56:
;MMI_WR.c,306 :: 		if(!(*port & BT3))                      // Did button 3 press
0x02B9	0x0850      	MOVF       FARG_keyboard_port, 0
0x02BA	0x0084      	MOVWF      FSR
0x02BB	0x0800      	MOVF       INDF, 0
0x02BC	0x00F2      	MOVWF      R2
0x02BD	0x1B72      	BTFSC      R2, 6
0x02BE	0x2AC0      	GOTO       L_keyboard58
;MMI_WR.c,307 :: 		flags |= (1 << 3);                  // Yes, set bit 3 flag
0x02BF	0x15AE      	BSF        keyboard_flags_L0, 3
L_keyboard58:
;MMI_WR.c,309 :: 		if((*port & BT3) && (flags & (1 << 3))) // button 1 released and flag 3 set
0x02C0	0x0850      	MOVF       FARG_keyboard_port, 0
0x02C1	0x0084      	MOVWF      FSR
0x02C2	0x0800      	MOVF       INDF, 0
0x02C3	0x00F2      	MOVWF      R2
0x02C4	0x1F72      	BTFSS      R2, 6
0x02C5	0x2AD5      	GOTO       L_keyboard61
0x02C6	0x1DAE      	BTFSS      keyboard_flags_L0, 3
0x02C7	0x2AD5      	GOTO       L_keyboard61
L__keyboard73:
;MMI_WR.c,311 :: 		flags &= ~(1 << 3);                 // cleans flag 3
0x02C8	0x11AE      	BCF        keyboard_flags_L0, 3
;MMI_WR.c,312 :: 		__ms(50);                           // anti-bouncing
0x02C9	0x3041      	MOVLW      65
0x02CA	0x00FC      	MOVWF      R12
0x02CB	0x30EE      	MOVLW      238
0x02CC	0x00FD      	MOVWF      R13
L_keyboard62:
0x02CD	0x0BFD      	DECFSZ     R13, 1
0x02CE	0x2ACD      	GOTO       L_keyboard62
0x02CF	0x0BFC      	DECFSZ     R12, 1
0x02D0	0x2ACD      	GOTO       L_keyboard62
0x02D1	0x0000      	NOP
;MMI_WR.c,313 :: 		return 3;                           // return 3, indicating button 3 pressed
0x02D2	0x3003      	MOVLW      3
0x02D3	0x00F0      	MOVWF      R0
0x02D4	0x2AF2      	GOTO       L_end_keyboard
;MMI_WR.c,314 :: 		}
L_keyboard61:
;MMI_WR.c,318 :: 		if(!(*port & BT4))                      // Did button 4 press
0x02D5	0x0850      	MOVF       FARG_keyboard_port, 0
0x02D6	0x0084      	MOVWF      FSR
0x02D7	0x0800      	MOVF       INDF, 0
0x02D8	0x00F2      	MOVWF      R2
0x02D9	0x1BF2      	BTFSC      R2, 7
0x02DA	0x2ADC      	GOTO       L_keyboard63
;MMI_WR.c,319 :: 		flags |= (1 << 4);                  // Yes, set bit 4 flag
0x02DB	0x162E      	BSF        keyboard_flags_L0, 4
L_keyboard63:
;MMI_WR.c,321 :: 		if((*port & BT4) && (flags & (1 << 4))) // button 1 released and flag 4 set
0x02DC	0x0850      	MOVF       FARG_keyboard_port, 0
0x02DD	0x0084      	MOVWF      FSR
0x02DE	0x0800      	MOVF       INDF, 0
0x02DF	0x00F2      	MOVWF      R2
0x02E0	0x1FF2      	BTFSS      R2, 7
0x02E1	0x2AF1      	GOTO       L_keyboard66
0x02E2	0x1E2E      	BTFSS      keyboard_flags_L0, 4
0x02E3	0x2AF1      	GOTO       L_keyboard66
L__keyboard72:
;MMI_WR.c,323 :: 		flags &= ~(1 << 4);                 // cleans flag 4
0x02E4	0x122E      	BCF        keyboard_flags_L0, 4
;MMI_WR.c,324 :: 		__ms(50);                           // anti-bouncing
0x02E5	0x3041      	MOVLW      65
0x02E6	0x00FC      	MOVWF      R12
0x02E7	0x30EE      	MOVLW      238
0x02E8	0x00FD      	MOVWF      R13
L_keyboard67:
0x02E9	0x0BFD      	DECFSZ     R13, 1
0x02EA	0x2AE9      	GOTO       L_keyboard67
0x02EB	0x0BFC      	DECFSZ     R12, 1
0x02EC	0x2AE9      	GOTO       L_keyboard67
0x02ED	0x0000      	NOP
;MMI_WR.c,325 :: 		return 4;                           // return 4, indicating button 1 pressed
0x02EE	0x3004      	MOVLW      4
0x02EF	0x00F0      	MOVWF      R0
0x02F0	0x2AF2      	GOTO       L_end_keyboard
;MMI_WR.c,326 :: 		}
L_keyboard66:
;MMI_WR.c,328 :: 		return 0;
0x02F1	0x01F0      	CLRF       R0
;MMI_WR.c,329 :: 		} // end keyboard
L_end_keyboard:
0x02F2	0x0008      	RETURN
; end of _keyboard
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x02F3	0x1283      	BCF        STATUS, 5
0x02F4	0x1303      	BCF        STATUS, 6
0x02F5	0x083D      	MOVF       ___DoICPAddr+1, 0
0x02F6	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x02F7	0x083C      	MOVF       ___DoICPAddr, 0
0x02F8	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x02F9	0x0008      	RETURN
; end of _____DoICP
_sled_on:
;MMI_WR.c,242 :: 		void sled_on(void)
;MMI_WR.c,244 :: 		sled = 1;
0x02FA	0x3001      	MOVLW      1
0x02FB	0x1283      	BCF        STATUS, 5
0x02FC	0x1303      	BCF        STATUS, 6
0x02FD	0x00BB      	MOVWF      _sled
;MMI_WR.c,245 :: 		slcd_cmd(0x06);
0x02FE	0x3006      	MOVLW      6
0x02FF	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x0300	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,246 :: 		} // end sled_on
L_end_sled_on:
0x0301	0x0008      	RETURN
; end of _sled_on
_sled_off:
;MMI_WR.c,251 :: 		void sled_off(void)
;MMI_WR.c,253 :: 		sled = 0;
0x0302	0x1283      	BCF        STATUS, 5
0x0303	0x1303      	BCF        STATUS, 6
0x0304	0x01BB      	CLRF       _sled
;MMI_WR.c,254 :: 		slcd_cmd(0x06);
0x0305	0x3006      	MOVLW      6
0x0306	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x0307	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,255 :: 		}// end sled_off
L_end_sled_off:
0x0308	0x0008      	RETURN
; end of _sled_off
_slcd_number:
;MMI_WR.c,97 :: 		void slcd_number(unsigned long num, char row, char col)
;MMI_WR.c,100 :: 		short no_zero = 0;               // Variables for cleaning of zeros to the left
0x0309	0x1283      	BCF        STATUS, 5
0x030A	0x1303      	BCF        STATUS, 6
0x030B	0x01CB      	CLRF       slcd_number_no_zero_L0
;MMI_WR.c,102 :: 		dem = (char)(num / 10000);
0x030C	0x3010      	MOVLW      16
0x030D	0x00F4      	MOVWF      R4
0x030E	0x3027      	MOVLW      39
0x030F	0x00F5      	MOVWF      R4+1
0x0310	0x01F6      	CLRF       R4+2
0x0311	0x01F7      	CLRF       R4+3
0x0312	0x0840      	MOVF       FARG_slcd_number_num, 0
0x0313	0x00F0      	MOVWF      R0
0x0314	0x0841      	MOVF       FARG_slcd_number_num+1, 0
0x0315	0x00F1      	MOVWF      R0+1
0x0316	0x0842      	MOVF       FARG_slcd_number_num+2, 0
0x0317	0x00F2      	MOVWF      R0+2
0x0318	0x0843      	MOVF       FARG_slcd_number_num+3, 0
0x0319	0x00F3      	MOVWF      R0+3
0x031A	0x20F2      	CALL       _Div_32x32_U
0x031B	0x0870      	MOVF       R0, 0
0x031C	0x00CC      	MOVWF      FLOC__slcd_number
0x031D	0x0871      	MOVF       R0+1, 0
0x031E	0x00CD      	MOVWF      FLOC__slcd_number+1
0x031F	0x0872      	MOVF       R0+2, 0
0x0320	0x00CE      	MOVWF      FLOC__slcd_number+2
0x0321	0x0873      	MOVF       R0+3, 0
0x0322	0x00CF      	MOVWF      FLOC__slcd_number+3
0x0323	0x084C      	MOVF       FLOC__slcd_number, 0
0x0324	0x00C6      	MOVWF      slcd_number_dem_L0
;MMI_WR.c,103 :: 		mil = (char)(num % 10000 / 1000);
0x0325	0x3010      	MOVLW      16
0x0326	0x00F4      	MOVWF      R4
0x0327	0x3027      	MOVLW      39
0x0328	0x00F5      	MOVWF      R4+1
0x0329	0x01F6      	CLRF       R4+2
0x032A	0x01F7      	CLRF       R4+3
0x032B	0x0840      	MOVF       FARG_slcd_number_num, 0
0x032C	0x00F0      	MOVWF      R0
0x032D	0x0841      	MOVF       FARG_slcd_number_num+1, 0
0x032E	0x00F1      	MOVWF      R0+1
0x032F	0x0842      	MOVF       FARG_slcd_number_num+2, 0
0x0330	0x00F2      	MOVWF      R0+2
0x0331	0x0843      	MOVF       FARG_slcd_number_num+3, 0
0x0332	0x00F3      	MOVWF      R0+3
0x0333	0x20F2      	CALL       _Div_32x32_U
0x0334	0x0878      	MOVF       R8, 0
0x0335	0x00F0      	MOVWF      R0
0x0336	0x0879      	MOVF       R8+1, 0
0x0337	0x00F1      	MOVWF      R0+1
0x0338	0x087A      	MOVF       R8+2, 0
0x0339	0x00F2      	MOVWF      R0+2
0x033A	0x087B      	MOVF       R8+3, 0
0x033B	0x00F3      	MOVWF      R0+3
0x033C	0x30E8      	MOVLW      232
0x033D	0x00F4      	MOVWF      R4
0x033E	0x3003      	MOVLW      3
0x033F	0x00F5      	MOVWF      R4+1
0x0340	0x01F6      	CLRF       R4+2
0x0341	0x01F7      	CLRF       R4+3
0x0342	0x20F2      	CALL       _Div_32x32_U
0x0343	0x0870      	MOVF       R0, 0
0x0344	0x00C7      	MOVWF      slcd_number_mil_L0
;MMI_WR.c,104 :: 		cen = (char)(num % 1000 / 100);
0x0345	0x30E8      	MOVLW      232
0x0346	0x00F4      	MOVWF      R4
0x0347	0x3003      	MOVLW      3
0x0348	0x00F5      	MOVWF      R4+1
0x0349	0x01F6      	CLRF       R4+2
0x034A	0x01F7      	CLRF       R4+3
0x034B	0x0840      	MOVF       FARG_slcd_number_num, 0
0x034C	0x00F0      	MOVWF      R0
0x034D	0x0841      	MOVF       FARG_slcd_number_num+1, 0
0x034E	0x00F1      	MOVWF      R0+1
0x034F	0x0842      	MOVF       FARG_slcd_number_num+2, 0
0x0350	0x00F2      	MOVWF      R0+2
0x0351	0x0843      	MOVF       FARG_slcd_number_num+3, 0
0x0352	0x00F3      	MOVWF      R0+3
0x0353	0x20F2      	CALL       _Div_32x32_U
0x0354	0x0878      	MOVF       R8, 0
0x0355	0x00F0      	MOVWF      R0
0x0356	0x0879      	MOVF       R8+1, 0
0x0357	0x00F1      	MOVWF      R0+1
0x0358	0x087A      	MOVF       R8+2, 0
0x0359	0x00F2      	MOVWF      R0+2
0x035A	0x087B      	MOVF       R8+3, 0
0x035B	0x00F3      	MOVWF      R0+3
0x035C	0x3064      	MOVLW      100
0x035D	0x00F4      	MOVWF      R4
0x035E	0x01F5      	CLRF       R4+1
0x035F	0x01F6      	CLRF       R4+2
0x0360	0x01F7      	CLRF       R4+3
0x0361	0x20F2      	CALL       _Div_32x32_U
0x0362	0x0870      	MOVF       R0, 0
0x0363	0x00C8      	MOVWF      slcd_number_cen_L0
;MMI_WR.c,105 :: 		dez = (char)(num % 100 / 10);
0x0364	0x3064      	MOVLW      100
0x0365	0x00F4      	MOVWF      R4
0x0366	0x01F5      	CLRF       R4+1
0x0367	0x01F6      	CLRF       R4+2
0x0368	0x01F7      	CLRF       R4+3
0x0369	0x0840      	MOVF       FARG_slcd_number_num, 0
0x036A	0x00F0      	MOVWF      R0
0x036B	0x0841      	MOVF       FARG_slcd_number_num+1, 0
0x036C	0x00F1      	MOVWF      R0+1
0x036D	0x0842      	MOVF       FARG_slcd_number_num+2, 0
0x036E	0x00F2      	MOVWF      R0+2
0x036F	0x0843      	MOVF       FARG_slcd_number_num+3, 0
0x0370	0x00F3      	MOVWF      R0+3
0x0371	0x20F2      	CALL       _Div_32x32_U
0x0372	0x0878      	MOVF       R8, 0
0x0373	0x00F0      	MOVWF      R0
0x0374	0x0879      	MOVF       R8+1, 0
0x0375	0x00F1      	MOVWF      R0+1
0x0376	0x087A      	MOVF       R8+2, 0
0x0377	0x00F2      	MOVWF      R0+2
0x0378	0x087B      	MOVF       R8+3, 0
0x0379	0x00F3      	MOVWF      R0+3
0x037A	0x300A      	MOVLW      10
0x037B	0x00F4      	MOVWF      R4
0x037C	0x01F5      	CLRF       R4+1
0x037D	0x01F6      	CLRF       R4+2
0x037E	0x01F7      	CLRF       R4+3
0x037F	0x20F2      	CALL       _Div_32x32_U
0x0380	0x0870      	MOVF       R0, 0
0x0381	0x00C9      	MOVWF      slcd_number_dez_L0
;MMI_WR.c,106 :: 		uni = (char)(num % 10);
0x0382	0x300A      	MOVLW      10
0x0383	0x00F4      	MOVWF      R4
0x0384	0x01F5      	CLRF       R4+1
0x0385	0x01F6      	CLRF       R4+2
0x0386	0x01F7      	CLRF       R4+3
0x0387	0x0840      	MOVF       FARG_slcd_number_num, 0
0x0388	0x00F0      	MOVWF      R0
0x0389	0x0841      	MOVF       FARG_slcd_number_num+1, 0
0x038A	0x00F1      	MOVWF      R0+1
0x038B	0x0842      	MOVF       FARG_slcd_number_num+2, 0
0x038C	0x00F2      	MOVWF      R0+2
0x038D	0x0843      	MOVF       FARG_slcd_number_num+3, 0
0x038E	0x00F3      	MOVWF      R0+3
0x038F	0x20F2      	CALL       _Div_32x32_U
0x0390	0x0878      	MOVF       R8, 0
0x0391	0x00F0      	MOVWF      R0
0x0392	0x0879      	MOVF       R8+1, 0
0x0393	0x00F1      	MOVWF      R0+1
0x0394	0x087A      	MOVF       R8+2, 0
0x0395	0x00F2      	MOVWF      R0+2
0x0396	0x087B      	MOVF       R8+3, 0
0x0397	0x00F3      	MOVWF      R0+3
0x0398	0x0870      	MOVF       R0, 0
0x0399	0x00CA      	MOVWF      slcd_number_uni_L0
;MMI_WR.c,108 :: 		if(!dem && !no_zero)
0x039A	0x084C      	MOVF       FLOC__slcd_number, 0
0x039B	0x1D03      	BTFSS      STATUS, 2
0x039C	0x2BA8      	GOTO       L_slcd_number8
0x039D	0x084B      	MOVF       slcd_number_no_zero_L0, 0
0x039E	0x1D03      	BTFSS      STATUS, 2
0x039F	0x2BA8      	GOTO       L_slcd_number8
L__slcd_number71:
;MMI_WR.c,109 :: 		slcd_wr_po(' ', row, col);
0x03A0	0x3020      	MOVLW      32
0x03A1	0x00D0      	MOVWF      FARG_slcd_wr_po_chr
0x03A2	0x0844      	MOVF       FARG_slcd_number_row, 0
0x03A3	0x00D1      	MOVWF      FARG_slcd_wr_po_row
0x03A4	0x0845      	MOVF       FARG_slcd_number_col, 0
0x03A5	0x00D2      	MOVWF      FARG_slcd_wr_po_col
0x03A6	0x226A      	CALL       _slcd_wr_po
0x03A7	0x2BB2      	GOTO       L_slcd_number9
L_slcd_number8:
;MMI_WR.c,112 :: 		slcd_wr_po(dem + 0x30, row, col);
0x03A8	0x3030      	MOVLW      48
0x03A9	0x0746      	ADDWF      slcd_number_dem_L0, 0
0x03AA	0x00D0      	MOVWF      FARG_slcd_wr_po_chr
0x03AB	0x0844      	MOVF       FARG_slcd_number_row, 0
0x03AC	0x00D1      	MOVWF      FARG_slcd_wr_po_row
0x03AD	0x0845      	MOVF       FARG_slcd_number_col, 0
0x03AE	0x00D2      	MOVWF      FARG_slcd_wr_po_col
0x03AF	0x226A      	CALL       _slcd_wr_po
;MMI_WR.c,113 :: 		no_zero = 1;
0x03B0	0x3001      	MOVLW      1
0x03B1	0x00CB      	MOVWF      slcd_number_no_zero_L0
;MMI_WR.c,114 :: 		}
L_slcd_number9:
;MMI_WR.c,116 :: 		if(!mil && !no_zero)
0x03B2	0x0847      	MOVF       slcd_number_mil_L0, 0
0x03B3	0x1D03      	BTFSS      STATUS, 2
0x03B4	0x2BBC      	GOTO       L_slcd_number12
0x03B5	0x084B      	MOVF       slcd_number_no_zero_L0, 0
0x03B6	0x1D03      	BTFSS      STATUS, 2
0x03B7	0x2BBC      	GOTO       L_slcd_number12
L__slcd_number70:
;MMI_WR.c,117 :: 		slcd_write(' ');
0x03B8	0x3020      	MOVLW      32
0x03B9	0x00D3      	MOVWF      FARG_slcd_write_chr
0x03BA	0x20A1      	CALL       _slcd_write
0x03BB	0x2BC2      	GOTO       L_slcd_number13
L_slcd_number12:
;MMI_WR.c,120 :: 		slcd_write(mil + 0x30);
0x03BC	0x3030      	MOVLW      48
0x03BD	0x0747      	ADDWF      slcd_number_mil_L0, 0
0x03BE	0x00D3      	MOVWF      FARG_slcd_write_chr
0x03BF	0x20A1      	CALL       _slcd_write
;MMI_WR.c,121 :: 		no_zero = 1;
0x03C0	0x3001      	MOVLW      1
0x03C1	0x00CB      	MOVWF      slcd_number_no_zero_L0
;MMI_WR.c,122 :: 		}
L_slcd_number13:
;MMI_WR.c,124 :: 		if(!cen && !no_zero)
0x03C2	0x0848      	MOVF       slcd_number_cen_L0, 0
0x03C3	0x1D03      	BTFSS      STATUS, 2
0x03C4	0x2BCC      	GOTO       L_slcd_number16
0x03C5	0x084B      	MOVF       slcd_number_no_zero_L0, 0
0x03C6	0x1D03      	BTFSS      STATUS, 2
0x03C7	0x2BCC      	GOTO       L_slcd_number16
L__slcd_number69:
;MMI_WR.c,125 :: 		slcd_write(' ');
0x03C8	0x3020      	MOVLW      32
0x03C9	0x00D3      	MOVWF      FARG_slcd_write_chr
0x03CA	0x20A1      	CALL       _slcd_write
0x03CB	0x2BD2      	GOTO       L_slcd_number17
L_slcd_number16:
;MMI_WR.c,128 :: 		slcd_write(cen + 0x30);
0x03CC	0x3030      	MOVLW      48
0x03CD	0x0748      	ADDWF      slcd_number_cen_L0, 0
0x03CE	0x00D3      	MOVWF      FARG_slcd_write_chr
0x03CF	0x20A1      	CALL       _slcd_write
;MMI_WR.c,129 :: 		no_zero = 1;
0x03D0	0x3001      	MOVLW      1
0x03D1	0x00CB      	MOVWF      slcd_number_no_zero_L0
;MMI_WR.c,130 :: 		}
L_slcd_number17:
;MMI_WR.c,132 :: 		if(!dez && !no_zero)
0x03D2	0x0849      	MOVF       slcd_number_dez_L0, 0
0x03D3	0x1D03      	BTFSS      STATUS, 2
0x03D4	0x2BDC      	GOTO       L_slcd_number20
0x03D5	0x084B      	MOVF       slcd_number_no_zero_L0, 0
0x03D6	0x1D03      	BTFSS      STATUS, 2
0x03D7	0x2BDC      	GOTO       L_slcd_number20
L__slcd_number68:
;MMI_WR.c,133 :: 		slcd_write(' ');
0x03D8	0x3020      	MOVLW      32
0x03D9	0x00D3      	MOVWF      FARG_slcd_write_chr
0x03DA	0x20A1      	CALL       _slcd_write
0x03DB	0x2BE2      	GOTO       L_slcd_number21
L_slcd_number20:
;MMI_WR.c,136 :: 		slcd_write(dez + 0x30);
0x03DC	0x3030      	MOVLW      48
0x03DD	0x0749      	ADDWF      slcd_number_dez_L0, 0
0x03DE	0x00D3      	MOVWF      FARG_slcd_write_chr
0x03DF	0x20A1      	CALL       _slcd_write
;MMI_WR.c,137 :: 		no_zero = 1;
0x03E0	0x3001      	MOVLW      1
0x03E1	0x00CB      	MOVWF      slcd_number_no_zero_L0
;MMI_WR.c,138 :: 		}
L_slcd_number21:
;MMI_WR.c,139 :: 		slcd_write(uni + 0x30);
0x03E2	0x3030      	MOVLW      48
0x03E3	0x074A      	ADDWF      slcd_number_uni_L0, 0
0x03E4	0x00D3      	MOVWF      FARG_slcd_write_chr
0x03E5	0x20A1      	CALL       _slcd_write
;MMI_WR.c,140 :: 		}// end slcd_number
L_end_slcd_number:
0x03E6	0x0008      	RETURN
; end of _slcd_number
_slcd_write_string:
;MMI_WR.c,46 :: 		void slcd_write_string(unsigned char str[], char row, char col)
;MMI_WR.c,48 :: 		char index = 0;
0x03E7	0x1283      	BCF        STATUS, 5
0x03E8	0x1303      	BCF        STATUS, 6
0x03E9	0x01C3      	CLRF       slcd_write_string_index_L0
;MMI_WR.c,50 :: 		if(!row)                   // line 0
0x03EA	0x0841      	MOVF       FARG_slcd_write_string_row, 0
0x03EB	0x1D03      	BTFSS      STATUS, 2
0x03EC	0x2BF2      	GOTO       L_slcd_write_string0
;MMI_WR.c,52 :: 		slcd_cmd(0x80 | col);  // sends commant to positione in correct column
0x03ED	0x3080      	MOVLW      128
0x03EE	0x0442      	IORWF      FARG_slcd_write_string_col, 0
0x03EF	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x03F0	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,53 :: 		}
0x03F1	0x2BF6      	GOTO       L_slcd_write_string1
L_slcd_write_string0:
;MMI_WR.c,56 :: 		slcd_cmd(0xC0 | col);   // sends commant to positione in correct column
0x03F2	0x30C0      	MOVLW      192
0x03F3	0x0442      	IORWF      FARG_slcd_write_string_col, 0
0x03F4	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x03F5	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,57 :: 		}
L_slcd_write_string1:
;MMI_WR.c,58 :: 		while(str[index] != '\0')
L_slcd_write_string2:
0x03F6	0x0843      	MOVF       slcd_write_string_index_L0, 0
0x03F7	0x0740      	ADDWF      FARG_slcd_write_string_str, 0
0x03F8	0x0084      	MOVWF      FSR
0x03F9	0x0800      	MOVF       INDF, 0
0x03FA	0x3A00      	XORLW      0
0x03FB	0x1903      	BTFSC      STATUS, 2
0x03FC	0x2C05      	GOTO       L_slcd_write_string3
;MMI_WR.c,60 :: 		slcd_write(str[index]);
0x03FD	0x0843      	MOVF       slcd_write_string_index_L0, 0
0x03FE	0x0740      	ADDWF      FARG_slcd_write_string_str, 0
0x03FF	0x0084      	MOVWF      FSR
0x0400	0x0800      	MOVF       INDF, 0
0x0401	0x00D3      	MOVWF      FARG_slcd_write_chr
0x0402	0x20A1      	CALL       _slcd_write
;MMI_WR.c,61 :: 		index++;
0x0403	0x0AC3      	INCF       slcd_write_string_index_L0, 1
;MMI_WR.c,62 :: 		}
0x0404	0x2BF6      	GOTO       L_slcd_write_string2
L_slcd_write_string3:
;MMI_WR.c,63 :: 		} // slcd_write_string
L_end_slcd_write_string:
0x0405	0x0008      	RETURN
; end of _slcd_write_string
_test_buttons:
;MMI_PIC.c,140 :: 		void test_buttons(void)
;MMI_PIC.c,144 :: 		kb = keyboard(&PORTB);
0x0406	0x3006      	MOVLW      PORTB
0x0407	0x1283      	BCF        STATUS, 5
0x0408	0x1303      	BCF        STATUS, 6
0x0409	0x00D0      	MOVWF      FARG_keyboard_port
0x040A	0x227F      	CALL       _keyboard
0x040B	0x0870      	MOVF       R0, 0
0x040C	0x00B0      	MOVWF      test_buttons_kb_L0
;MMI_PIC.c,146 :: 		switch(kb)
0x040D	0x2C1A      	GOTO       L_test_buttons18
;MMI_PIC.c,148 :: 		case 1:
L_test_buttons20:
;MMI_PIC.c,149 :: 		sled_on();
0x040E	0x22FA      	CALL       _sled_on
;MMI_PIC.c,150 :: 		sbacklight_on();
0x040F	0x20C2      	CALL       _sbacklight_on
;MMI_PIC.c,151 :: 		break;
0x0410	0x2C2A      	GOTO       L_test_buttons19
;MMI_PIC.c,153 :: 		case 2:
L_test_buttons21:
;MMI_PIC.c,154 :: 		sled_on();
0x0411	0x22FA      	CALL       _sled_on
;MMI_PIC.c,155 :: 		sbacklight_off();
0x0412	0x20CA      	CALL       _sbacklight_off
;MMI_PIC.c,156 :: 		break;
0x0413	0x2C2A      	GOTO       L_test_buttons19
;MMI_PIC.c,158 :: 		case 3:
L_test_buttons22:
;MMI_PIC.c,159 :: 		sled_off();
0x0414	0x2302      	CALL       _sled_off
;MMI_PIC.c,160 :: 		sbacklight_on();
0x0415	0x20C2      	CALL       _sbacklight_on
;MMI_PIC.c,161 :: 		break;
0x0416	0x2C2A      	GOTO       L_test_buttons19
;MMI_PIC.c,163 :: 		case 4:
L_test_buttons23:
;MMI_PIC.c,164 :: 		sled_off();
0x0417	0x2302      	CALL       _sled_off
;MMI_PIC.c,165 :: 		sbacklight_off();
0x0418	0x20CA      	CALL       _sbacklight_off
;MMI_PIC.c,166 :: 		break;
0x0419	0x2C2A      	GOTO       L_test_buttons19
;MMI_PIC.c,167 :: 		}// end switch
L_test_buttons18:
0x041A	0x0830      	MOVF       test_buttons_kb_L0, 0
0x041B	0x3A01      	XORLW      1
0x041C	0x1903      	BTFSC      STATUS, 2
0x041D	0x2C0E      	GOTO       L_test_buttons20
0x041E	0x0830      	MOVF       test_buttons_kb_L0, 0
0x041F	0x3A02      	XORLW      2
0x0420	0x1903      	BTFSC      STATUS, 2
0x0421	0x2C11      	GOTO       L_test_buttons21
0x0422	0x0830      	MOVF       test_buttons_kb_L0, 0
0x0423	0x3A03      	XORLW      3
0x0424	0x1903      	BTFSC      STATUS, 2
0x0425	0x2C14      	GOTO       L_test_buttons22
0x0426	0x0830      	MOVF       test_buttons_kb_L0, 0
0x0427	0x3A04      	XORLW      4
0x0428	0x1903      	BTFSC      STATUS, 2
0x0429	0x2C17      	GOTO       L_test_buttons23
L_test_buttons19:
;MMI_PIC.c,168 :: 		}// end test_buttons
L_end_test_buttons:
0x042A	0x0008      	RETURN
; end of _test_buttons
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x042B	0x22F3      	CALL       _____DoICP
0x042C	0x118A      	BCF        PCLATH, 3
0x042D	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x042E	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x042F	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0430	0x0ABC      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0431	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0432	0x0ABD      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0433	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0434	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0435	0x2C2B      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0436	0x0008      	RETURN
; end of ___CC2DW
_slcd_init:
;MMI_WR.c,144 :: 		void slcd_init(void)
;MMI_WR.c,146 :: 		__ms(48);                // Stabilization time recommended (datasheet)
0x0437	0x303F      	MOVLW      63
0x0438	0x1283      	BCF        STATUS, 5
0x0439	0x1303      	BCF        STATUS, 6
0x043A	0x00FC      	MOVWF      R12
0x043B	0x3055      	MOVLW      85
0x043C	0x00FD      	MOVWF      R13
L_slcd_init22:
0x043D	0x0BFD      	DECFSZ     R13, 1
0x043E	0x2C3D      	GOTO       L_slcd_init22
0x043F	0x0BFC      	DECFSZ     R12, 1
0x0440	0x2C3D      	GOTO       L_slcd_init22
;MMI_WR.c,147 :: 		send_nibble(0x30,0,0,0); // Initialization protocol
0x0441	0x3030      	MOVLW      48
0x0442	0x00D4      	MOVWF      FARG_send_nibble_nib
0x0443	0x01D5      	CLRF       FARG_send_nibble_rsel
0x0444	0x01D6      	CLRF       FARG_send_nibble_bli
0x0445	0x01D7      	CLRF       FARG_send_nibble_led
0x0446	0x204B      	CALL       _send_nibble
;MMI_WR.c,148 :: 		__ms(5);                                 // Time above of suggested (datasheet)
0x0447	0x3007      	MOVLW      7
0x0448	0x00FC      	MOVWF      R12
0x0449	0x307D      	MOVLW      125
0x044A	0x00FD      	MOVWF      R13
L_slcd_init23:
0x044B	0x0BFD      	DECFSZ     R13, 1
0x044C	0x2C4B      	GOTO       L_slcd_init23
0x044D	0x0BFC      	DECFSZ     R12, 1
0x044E	0x2C4B      	GOTO       L_slcd_init23
;MMI_WR.c,149 :: 		send_nibble(0x30,0,0,0); // Initialization protocol
0x044F	0x3030      	MOVLW      48
0x0450	0x00D4      	MOVWF      FARG_send_nibble_nib
0x0451	0x01D5      	CLRF       FARG_send_nibble_rsel
0x0452	0x01D6      	CLRF       FARG_send_nibble_bli
0x0453	0x01D7      	CLRF       FARG_send_nibble_led
0x0454	0x204B      	CALL       _send_nibble
;MMI_WR.c,150 :: 		__us(150);               // Time above of suggested (datasheet)
0x0455	0x3031      	MOVLW      49
0x0456	0x00FD      	MOVWF      R13
L_slcd_init24:
0x0457	0x0BFD      	DECFSZ     R13, 1
0x0458	0x2C57      	GOTO       L_slcd_init24
0x0459	0x0000      	NOP
0x045A	0x0000      	NOP
;MMI_WR.c,151 :: 		send_nibble(0x30,0,0,0); // Initialization protocol
0x045B	0x3030      	MOVLW      48
0x045C	0x00D4      	MOVWF      FARG_send_nibble_nib
0x045D	0x01D5      	CLRF       FARG_send_nibble_rsel
0x045E	0x01D6      	CLRF       FARG_send_nibble_bli
0x045F	0x01D7      	CLRF       FARG_send_nibble_led
0x0460	0x204B      	CALL       _send_nibble
;MMI_WR.c,152 :: 		send_nibble(0x20,0,0,0); // 4 bits mode LCD
0x0461	0x3020      	MOVLW      32
0x0462	0x00D4      	MOVWF      FARG_send_nibble_nib
0x0463	0x01D5      	CLRF       FARG_send_nibble_rsel
0x0464	0x01D6      	CLRF       FARG_send_nibble_bli
0x0465	0x01D7      	CLRF       FARG_send_nibble_led
0x0466	0x204B      	CALL       _send_nibble
;MMI_WR.c,154 :: 		slcd_cmd(0x28);          // 5x8 dots by character, two lines
0x0467	0x3028      	MOVLW      40
0x0468	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x0469	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,155 :: 		slcd_opt(1, 0, 0);       // Turn on LCD, turn off cursor, turn off blink)
0x046A	0x3001      	MOVLW      1
0x046B	0x00D0      	MOVWF      FARG_slcd_opt_disp
0x046C	0x01D1      	CLRF       FARG_slcd_opt_cursor
0x046D	0x01D2      	CLRF       FARG_slcd_opt_blink
0x046E	0x20DA      	CALL       _slcd_opt
;MMI_WR.c,156 :: 		slcd_cmd(0x01);          // Clears LCD
0x046F	0x3001      	MOVLW      1
0x0470	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x0471	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,157 :: 		slcd_cmd(0x06);          // Address increment mode for right
0x0472	0x3006      	MOVLW      6
0x0473	0x00D3      	MOVWF      FARG_slcd_cmd_cmd
0x0474	0x2082      	CALL       _slcd_cmd
;MMI_WR.c,158 :: 		slcd_clear();
0x0475	0x20D1      	CALL       _slcd_clear
;MMI_WR.c,159 :: 		}// slcd_init
L_end_slcd_init:
0x0476	0x0008      	RETURN
; end of _slcd_init
_main:
0x0477	0x24EE      	CALL       1262
;MMI_PIC.c,38 :: 		void main(void)
;MMI_PIC.c,40 :: 		char tests = 0;
;MMI_PIC.c,41 :: 		uint16_t counter = 0;
0x0478	0x3000      	MOVLW      0
0x0479	0x1283      	BCF        STATUS, 5
0x047A	0x1303      	BCF        STATUS, 6
0x047B	0x00BE      	MOVWF      main_counter_L0
0x047C	0x3000      	MOVLW      0
0x047D	0x00BF      	MOVWF      main_counter_L0+1
;MMI_PIC.c,43 :: 		CMCON = 0x07;
0x047E	0x3007      	MOVLW      7
0x047F	0x009F      	MOVWF      CMCON
;MMI_PIC.c,44 :: 		TRISB = 0xF8;
0x0480	0x30F8      	MOVLW      248
0x0481	0x1683      	BSF        STATUS, 5
0x0482	0x0086      	MOVWF      TRISB
;MMI_PIC.c,46 :: 		slcd_init();
0x0483	0x2437      	CALL       _slcd_init
;MMI_PIC.c,48 :: 		delay_ms(100);
0x0484	0x3082      	MOVLW      130
0x0485	0x00FC      	MOVWF      R12
0x0486	0x30DD      	MOVLW      221
0x0487	0x00FD      	MOVWF      R13
L_main0:
0x0488	0x0BFD      	DECFSZ     R13, 1
0x0489	0x2C88      	GOTO       L_main0
0x048A	0x0BFC      	DECFSZ     R12, 1
0x048B	0x2C88      	GOTO       L_main0
0x048C	0x0000      	NOP
0x048D	0x0000      	NOP
;MMI_PIC.c,49 :: 		slcd_opt(1,0,0);
0x048E	0x3001      	MOVLW      1
0x048F	0x00D0      	MOVWF      FARG_slcd_opt_disp
0x0490	0x01D1      	CLRF       FARG_slcd_opt_cursor
0x0491	0x01D2      	CLRF       FARG_slcd_opt_blink
0x0492	0x20DA      	CALL       _slcd_opt
;MMI_PIC.c,51 :: 		sled_on();
0x0493	0x22FA      	CALL       _sled_on
;MMI_PIC.c,52 :: 		sbacklight_on();
0x0494	0x20C2      	CALL       _sbacklight_on
;MMI_PIC.c,54 :: 		sled_off();
0x0495	0x2302      	CALL       _sled_off
;MMI_PIC.c,55 :: 		sbacklight_off();
0x0496	0x20CA      	CALL       _sbacklight_off
;MMI_PIC.c,57 :: 		slcd_write_string("PIC", 0, 0);
0x0497	0x3021      	MOVLW      ?lstr1_MMI_PIC
0x0498	0x00C0      	MOVWF      FARG_slcd_write_string_str
0x0499	0x01C1      	CLRF       FARG_slcd_write_string_row
0x049A	0x01C2      	CLRF       FARG_slcd_write_string_col
0x049B	0x23E7      	CALL       _slcd_write_string
;MMI_PIC.c,58 :: 		slcd_write_string("Develop", 1, 0);
0x049C	0x3025      	MOVLW      ?lstr2_MMI_PIC
0x049D	0x00C0      	MOVWF      FARG_slcd_write_string_str
0x049E	0x3001      	MOVLW      1
0x049F	0x00C1      	MOVWF      FARG_slcd_write_string_row
0x04A0	0x01C2      	CLRF       FARG_slcd_write_string_col
0x04A1	0x23E7      	CALL       _slcd_write_string
;MMI_PIC.c,59 :: 		slcd_write_string("Counter:", 0, 5);
0x04A2	0x3031      	MOVLW      ?lstr3_MMI_PIC
0x04A3	0x00C0      	MOVWF      FARG_slcd_write_string_str
0x04A4	0x01C1      	CLRF       FARG_slcd_write_string_row
0x04A5	0x3005      	MOVLW      5
0x04A6	0x00C2      	MOVWF      FARG_slcd_write_string_col
0x04A7	0x23E7      	CALL       _slcd_write_string
;MMI_PIC.c,61 :: 		while(true)
L_main1:
;MMI_PIC.c,63 :: 		slcd_number(counter, 1, 11);
0x04A8	0x083E      	MOVF       main_counter_L0, 0
0x04A9	0x00C0      	MOVWF      FARG_slcd_number_num
0x04AA	0x083F      	MOVF       main_counter_L0+1, 0
0x04AB	0x00C1      	MOVWF      FARG_slcd_number_num+1
0x04AC	0x01C2      	CLRF       FARG_slcd_number_num+2
0x04AD	0x01C3      	CLRF       FARG_slcd_number_num+3
0x04AE	0x3001      	MOVLW      1
0x04AF	0x00C4      	MOVWF      FARG_slcd_number_row
0x04B0	0x300B      	MOVLW      11
0x04B1	0x00C5      	MOVWF      FARG_slcd_number_col
0x04B2	0x2309      	CALL       _slcd_number
;MMI_PIC.c,64 :: 		counter++;
0x04B3	0x0ABE      	INCF       main_counter_L0, 1
0x04B4	0x1903      	BTFSC      STATUS, 2
0x04B5	0x0ABF      	INCF       main_counter_L0+1, 1
;MMI_PIC.c,65 :: 		if(counter >= COUNTER_LIMIT)
0x04B6	0x3003      	MOVLW      3
0x04B7	0x023F      	SUBWF      main_counter_L0+1, 0
0x04B8	0x1D03      	BTFSS      STATUS, 2
0x04B9	0x2CBC      	GOTO       L__main25
0x04BA	0x30E8      	MOVLW      232
0x04BB	0x023E      	SUBWF      main_counter_L0, 0
L__main25:
0x04BC	0x1C03      	BTFSS      STATUS, 0
0x04BD	0x2CC0      	GOTO       L_main3
;MMI_PIC.c,67 :: 		counter = 0;
0x04BE	0x01BE      	CLRF       main_counter_L0
0x04BF	0x01BF      	CLRF       main_counter_L0+1
;MMI_PIC.c,68 :: 		}
L_main3:
;MMI_PIC.c,69 :: 		__ms(100);
0x04C0	0x3082      	MOVLW      130
0x04C1	0x00FC      	MOVWF      R12
0x04C2	0x30DD      	MOVLW      221
0x04C3	0x00FD      	MOVWF      R13
L_main4:
0x04C4	0x0BFD      	DECFSZ     R13, 1
0x04C5	0x2CC4      	GOTO       L_main4
0x04C6	0x0BFC      	DECFSZ     R12, 1
0x04C7	0x2CC4      	GOTO       L_main4
0x04C8	0x0000      	NOP
0x04C9	0x0000      	NOP
;MMI_PIC.c,71 :: 		test_buttons();
0x04CA	0x2406      	CALL       _test_buttons
;MMI_PIC.c,72 :: 		} // end while
0x04CB	0x2CA8      	GOTO       L_main1
;MMI_PIC.c,73 :: 		}// End main
L_end_main:
0x04CC	0x2CCC      	GOTO       $+0
; end of _main
0x04EE	0x3021      	MOVLW      33
0x04EF	0x0084      	MOVWF      FSR
0x04F0	0x301B      	MOVLW      27
0x04F1	0x1283      	BCF        STATUS, 5
0x04F2	0x1303      	BCF        STATUS, 6
0x04F3	0x00F0      	MOVWF      R0
0x04F4	0x30D2      	MOVLW      210
0x04F5	0x00BC      	MOVWF      ___DoICPAddr
0x04F6	0x3004      	MOVLW      4
0x04F7	0x00BD      	MOVWF      61
0x04F8	0x242B      	CALL       1067
0x04F9	0x0008      	RETURN
;MMI_PIC.c,0 :: ?ICS?lstr1_MMI_PIC
0x04D2	0x3450 ;?ICS?lstr1_MMI_PIC+0
0x04D3	0x3449 ;?ICS?lstr1_MMI_PIC+1
0x04D4	0x3443 ;?ICS?lstr1_MMI_PIC+2
0x04D5	0x3400 ;?ICS?lstr1_MMI_PIC+3
; end of ?ICS?lstr1_MMI_PIC
;MMI_PIC.c,0 :: ?ICS?lstr2_MMI_PIC
0x04D6	0x3444 ;?ICS?lstr2_MMI_PIC+0
0x04D7	0x3465 ;?ICS?lstr2_MMI_PIC+1
0x04D8	0x3476 ;?ICS?lstr2_MMI_PIC+2
0x04D9	0x3465 ;?ICS?lstr2_MMI_PIC+3
0x04DA	0x346C ;?ICS?lstr2_MMI_PIC+4
0x04DB	0x346F ;?ICS?lstr2_MMI_PIC+5
0x04DC	0x3470 ;?ICS?lstr2_MMI_PIC+6
0x04DD	0x3400 ;?ICS?lstr2_MMI_PIC+7
; end of ?ICS?lstr2_MMI_PIC
;MMI_WR.c,0 :: ?ICSslcd_opt_opt_L0
0x04DE	0x3408 ;?ICSslcd_opt_opt_L0+0
; end of ?ICSslcd_opt_opt_L0
;MMI_WR.c,0 :: ?ICSkeyboard_flags_L0
0x04DF	0x3400 ;?ICSkeyboard_flags_L0+0
; end of ?ICSkeyboard_flags_L0
;MMI_WR.c,0 :: ?ICSsend_nibble_sbyte_L0
0x04E0	0x3400 ;?ICSsend_nibble_sbyte_L0+0
; end of ?ICSsend_nibble_sbyte_L0
;MMI_PIC.c,0 :: ?ICStest_buttons_kb_L0
0x04E1	0x3400 ;?ICStest_buttons_kb_L0+0
; end of ?ICStest_buttons_kb_L0
;MMI_PIC.c,0 :: ?ICS?lstr3_MMI_PIC
0x04E2	0x3443 ;?ICS?lstr3_MMI_PIC+0
0x04E3	0x346F ;?ICS?lstr3_MMI_PIC+1
0x04E4	0x3475 ;?ICS?lstr3_MMI_PIC+2
0x04E5	0x346E ;?ICS?lstr3_MMI_PIC+3
0x04E6	0x3474 ;?ICS?lstr3_MMI_PIC+4
0x04E7	0x3465 ;?ICS?lstr3_MMI_PIC+5
0x04E8	0x3472 ;?ICS?lstr3_MMI_PIC+6
0x04E9	0x343A ;?ICS?lstr3_MMI_PIC+7
0x04EA	0x3400 ;?ICS?lstr3_MMI_PIC+8
; end of ?ICS?lstr3_MMI_PIC
;MMI_WR.c,0 :: ?ICS_sbli
0x04EB	0x3400 ;?ICS_sbli+0
; end of ?ICS_sbli
;MMI_WR.c,0 :: ?ICS_sled
0x04EC	0x3400 ;?ICS_sled+0
; end of ?ICS_sled
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [72]    _shift_reg
0x004B      [55]    _send_nibble
0x0082      [31]    _slcd_cmd
0x00A1      [33]    _slcd_write
0x00C2       [8]    _sbacklight_on
0x00CA       [7]    _sbacklight_off
0x00D1       [9]    _slcd_clear
0x00DA      [24]    _slcd_opt
0x00F2     [376]    _Div_32x32_U
0x026A      [21]    _slcd_wr_po
0x027F     [116]    _keyboard
0x02F3       [7]    _____DoICP
0x02FA       [8]    _sled_on
0x0302       [7]    _sled_off
0x0309     [222]    _slcd_number
0x03E7      [31]    _slcd_write_string
0x0406      [37]    _test_buttons
0x042B      [12]    ___CC2DW
0x0437      [64]    _slcd_init
0x0477      [85]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x001F       [1]    CMCON
0x0020       [1]    ___math_tempb
0x0021       [4]    ?lstr1_MMI_PIC
0x0025       [8]    ?lstr2_MMI_PIC
0x002D       [1]    slcd_opt_opt_L0
0x002E       [1]    keyboard_flags_L0
0x002F       [1]    send_nibble_sbyte_L0
0x0030       [1]    test_buttons_kb_L0
0x0031       [9]    ?lstr3_MMI_PIC
0x003A       [1]    _sbli
0x003B       [1]    _sled
0x003C       [2]    ___DoICPAddr
0x003E       [2]    main_counter_L0
0x0040       [1]    FARG_slcd_write_string_str
0x0040       [4]    FARG_slcd_number_num
0x0041       [1]    FARG_slcd_write_string_row
0x0042       [1]    FARG_slcd_write_string_col
0x0043       [1]    slcd_write_string_index_L0
0x0044       [1]    FARG_slcd_number_row
0x0045       [1]    FARG_slcd_number_col
0x0046       [1]    slcd_number_dem_L0
0x0047       [1]    slcd_number_mil_L0
0x0048       [1]    slcd_number_cen_L0
0x0049       [1]    slcd_number_dez_L0
0x004A       [1]    slcd_number_uni_L0
0x004B       [1]    slcd_number_no_zero_L0
0x004C       [4]    FLOC__slcd_number
0x0050       [1]    FARG_slcd_wr_po_chr
0x0050       [1]    FARG_slcd_opt_disp
0x0050       [1]    FARG_keyboard_port
0x0051       [1]    FARG_slcd_wr_po_row
0x0051       [1]    FARG_slcd_opt_cursor
0x0052       [1]    FARG_slcd_wr_po_col
0x0052       [1]    FARG_slcd_opt_blink
0x0053       [1]    FARG_slcd_cmd_cmd
0x0053       [1]    FARG_slcd_write_chr
0x0054       [1]    FARG_send_nibble_nib
0x0055       [1]    FARG_send_nibble_rsel
0x0056       [1]    FARG_send_nibble_bli
0x0057       [1]    FARG_send_nibble_led
0x0058       [1]    FARG_shift_reg_byte_val
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x04D2       [4]    ?ICS?lstr1_MMI_PIC
0x04D6       [8]    ?ICS?lstr2_MMI_PIC
0x04DE       [1]    ?ICSslcd_opt_opt_L0
0x04DF       [1]    ?ICSkeyboard_flags_L0
0x04E0       [1]    ?ICSsend_nibble_sbyte_L0
0x04E1       [1]    ?ICStest_buttons_kb_L0
0x04E2       [9]    ?ICS?lstr3_MMI_PIC
0x04EB       [1]    ?ICS_sbli
0x04EC       [1]    ?ICS_sled
